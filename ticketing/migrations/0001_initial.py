# Generated by Django 2.0.5 on 2018-05-28 11:47

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cinema',
            fields=[
                ('cinema_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=100)),
                ('tel', models.CharField(max_length=50)),
                ('area', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Cinema_comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('score', models.FloatField()),
                ('cinema_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticketing.Cinema')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('username', models.CharField(default='', max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('gender', models.IntegerField(choices=[(1, '男'), (0, '女')])),
                ('age', models.IntegerField()),
                ('password', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('username', models.CharField(default='', max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('gender', models.IntegerField(choices=[(1, '男'), (0, '女')])),
                ('age', models.IntegerField()),
                ('password', models.CharField(max_length=50)),
                ('cinema_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticketing.Cinema')),
            ],
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('house_id', models.AutoField(primary_key=True, serialize=False)),
                ('house_name', models.CharField(max_length=50)),
                ('cinema_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticketing.Cinema')),
            ],
        ),
        migrations.CreateModel(
            name='House_all',
            fields=[
                ('house_type', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('rows', models.IntegerField()),
                ('columns', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('movie_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('length', models.IntegerField()),
                ('type', models.CharField(max_length=50)),
                ('director', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Movie_comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('score', models.FloatField()),
                ('movie_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticketing.Movie')),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticketing.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('time', models.IntegerField()),
                ('seat_row', models.IntegerField()),
                ('seat_column', models.IntegerField()),
                ('status', models.IntegerField()),
                ('price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('session_id', models.AutoField(primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField()),
                ('price', models.FloatField()),
                ('house_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticketing.House')),
                ('movie_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticketing.Movie')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='session_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticketing.Session'),
        ),
        migrations.AddField(
            model_name='order',
            name='username',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticketing.Customer'),
        ),
        migrations.AddField(
            model_name='house',
            name='house_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticketing.House_all'),
        ),
        migrations.AddField(
            model_name='cinema_comment',
            name='username',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticketing.Customer'),
        ),
        migrations.AlterUniqueTogether(
            name='order',
            unique_together={('session_id', 'username', 'time')},
        ),
        migrations.AlterUniqueTogether(
            name='movie_comment',
            unique_together={('movie_id', 'username')},
        ),
        migrations.AlterUniqueTogether(
            name='house',
            unique_together={('cinema_id', 'house_name')},
        ),
        migrations.AlterUniqueTogether(
            name='cinema_comment',
            unique_together={('cinema_id', 'username')},
        ),
    ]
